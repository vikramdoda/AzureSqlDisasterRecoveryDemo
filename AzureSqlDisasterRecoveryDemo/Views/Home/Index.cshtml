
@model  AzureSqlDisasterRecoveryDemo.Models.HomeModel

@using System.Data

@{
    ViewBag.Title = "Home Page";
}

@section scripts{



    <script src="~/Scripts/jquery-ui-1.12.1.js"></script>
    <script src="https://cdn.jsdelivr.net/free-jqgrid/4.14.0/js/jquery.jqgrid.min.js"></script>
    <script src="~/Scripts/i18n/grid.locale-en.js"></script>
    <script src="~/Scripts/jquery.jqGrid.min.js"></script>
    <script src="~/Scripts/script.js"></script>
   <script src="http://cdn-na.infragistics.com/igniteui/2016.2/latest/js/infragistics.core.js"></script>
<script src="http://cdn-na.infragistics.com/igniteui/2016.2/latest/js/infragistics.lob.js"></script>

    <script>
        $(function () {
            $("#datalocations").selectmenu();
            $("#datastorelocations").selectmenu();
            $("#tabs").tabs();
            $("#datalocations").on('selectmenuchange', function () {
                var active = $("#tabs").tabs("option", "active");
                $("#selectedTab").val(active);
                $.getJSON("/Home/GetTableData?location="+$('#datalocations').val(), function (data) {

                    $("#iqGrid").igGrid({
                        dataSource: JSON.parse(data) //JSON Array defined above                     
                    })
                });
            });
            $("#datastorelocations").on('selectmenuchange', function () {
                var active = $("#tabs").tabs("option", "active");
                $("#selectedTab").val(active);
                $("#jqGrid").jqGrid().setGridParam({ url: '/Home/GetAccounts?store=' + $("#datastorelocations").val() }).trigger("reloadGrid");
            });

            $.getJSON("/Home/GetTableData?location=On-Premise", function (data) {

                $("#iqGrid").igGrid({
                    dataSource: JSON.parse(data) //JSON Array defined above                     
                })
            });
        });

        $(document).ready(function () {
            $("#jqGrid").jqGrid({
                url: "/Home/GetAccounts?store=Primary",
                datatype: 'json',
                mtype: 'Get',
                colNames: ['AccountKey', 'Operator', 'CustomMembers', 'ValueType', 'CustomMemberOptions', 'ParentAccountKey', 'AccountCodeAlternateKey', 'ParentAccountCodeAlternateKey', 'AccountDescription', 'AccountType'],
                colModel: [
                    { key: true, hidden: true, name: 'AccountKey', index: 'AccountKey', editable: false },
                    { key: false, hidden: true, name: 'Operator', index: 'Operator', editable: false },
                    { key: false, hidden: true, name: 'CustomMembers', index: 'CustomMembers', editable: false },
                    { key: false, hidden: true, name: 'ValueType', index: 'ValueType', editable: false },
                    { key: false, hidden: true, name: 'CustomMemberOptions', index: 'CustomMemberOptions', editable: false },
                    { key: false, name: 'ParentAccountKey', index: 'ParentAccountKey', editable: false },
                    { key: false, name: 'AccountCodeAlternateKey', index: 'AccountCodeAlternateKey', editable: false },
                    { key: false, name: 'ParentAccountCodeAlternateKey', index: 'ParentAccountCodeAlternateKey', editable: false },
                    { key: false, name: 'AccountDescription', index: 'AccountDescription', editable: true },
                    { key: false, name: 'AccountType', index: 'AccountType', editable: true }],
                pager: jQuery('#jqControls'),
                rowNum: 10,
                rowList: [10, 20, 30, 40, 50],
                height: '100%',
                viewrecords: true,
                caption: 'Account Records',
                emptyrecords: 'No Account Records are Available to Display',
                jsonReader: {
                    root: "rows",
                    page: "page",
                    total: "total",
                    records: "records",
                    repeatitems: false,
                    Id: "0"
                },
                autowidth: true,
                multiselect: false
            }).navGrid('#jqControls', { edit: true, add: false, del: false, search: false, refresh: true },
      {
          zIndex: 100,
          url: '/Home/EditAccount?store=Primary',
          closeOnEscape: true,
          closeAfterEdit: true,
          recreateForm: true,
          onclickSubmit: function (params, postData) {
              params.url = '/Home/EditAccount?store=' + $("#datastorelocations").val();
          },
          afterComplete: function (response) {
              if (response.responseText) {
                  alert(response.responseText);
              }
          }
      });
        });
    </script>
@*<link href="http://cdn-na.infragistics.com/igniteui/2016.2/latest/css/themes/infragistics/infragistics.theme.css" rel="stylesheet" />*@
<link href="http://cdn-na.infragistics.com/igniteui/2016.2/latest/css/structure/infragistics.css" rel="stylesheet" />

    <link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/free-jqgrid/4.14.0/css/ui.jqgrid.min.css">
    <link href="~/Content/jquery.jqGrid/ui.jqgrid.css" rel="stylesheet" />
   

}
<div>
        <p class="lead">Azure SQL Feature Demos</p>
    </div>
    <div id="tabs">
        <ul>
            <li><a href="#tabs-1">Stretch Database</a></li>
            <li><a href="#tabs-2">SQL Always On</a></li>
        </ul>

        <div id="tabs-1">
            <div style="padding:5px;">
                <div>
                    <div class="row">
                        <div class="col-md-6">
                            <p class="lead">Table Name: @Model.StretchTableName</p>
                        </div>
                        <div class="col-md-6"><p class="lead">Enabled Stretch On Table: @(Model.StretchEnabled ? "YES" : "NO")</p></div>
                    </div>
                    <div class="row">
                        <p> Following table shows the spaced used on on premise server and azure sql server </p>
                    </div>
                    <div class="row">
                        <table class="table table-bordered">
                            <tr>
                                <th>Location</th>
                                <th>Data Size</th>
                                <th>Rows Count</th>
                            </tr>
                            <tr>
                                <td>LOCAL</td>
                                <td>@Model.LocalSpaceUsed.data</td>
                                <td>@Model.LocalSpaceUsed.rows</td>
                            </tr>
                            <tr>
                                <td>AZURE</td>
                                <td>@(Model.RemoteSpaceUsed != null ? Model.RemoteSpaceUsed.data : "0KB")</td>
                                <td>@(Model.RemoteSpaceUsed != null ? Model.RemoteSpaceUsed.rows : "0")</td>
                            </tr>
                            <tr>
                                <td>TOTAL</td>
                                <td>@Model.TotalSpaceUsed.data</td>
                                <td>@Model.TotalSpaceUsed.rows</td>

                            </tr>
                        </table>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <p class="lead">
                                Table Data
                            </p>
                        </div>
                        <div class="col-md-6" style="text-align:right">
                            <b>Fetch Data From </b>
                            <select name="datalocation" id="datalocations">
                                <option selected="selected">On-Premise</option>
                                <option>Azure</option>
                            </select>
                        </div>
                    </div>
                   
                    <div class="row">
                        <table id="iqGrid" class="table table-bordered"></table>
                    </div>
                </div>
            </div>
        </div>
        <div id="tabs-2">
            <div class="row">
                <div class="col-md-6">
                    <p class="lead">Database connection status: @(Model.IsDatabaseOnline ? "Success" : "Failed" )</p>
                </div>
                <div class="col-md-6" style="text-align:right">
                </div>
            </div>
            @if (Model.IsDatabaseOnline)
            {
                <div class="row">
                    <div class="col-md-6"><span><b>Primary Database Server:</b> @Model.AlwaysOnPrimaryDatabaseServer</span></div>
                    <div class="col-md-6">
                        <p><b>Secondary Database server:</b> @Model.AlwaysOnSecondaryDatabaseServer</p>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <b>Fetch Data From </b>
                        <select name="datastorelocation" id="datastorelocations">
                            <option selected="selected">Primary</option>
                            <option>Secondary</option>
                        </select>

                    </div>
                    <div class="col-md-6" style="text-align:right">

                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-12">
                        <table id="jqGrid"></table>
                        <div id="jqControls"></div>
                    </div>
                </div>
            }
        </div>
    </div>

